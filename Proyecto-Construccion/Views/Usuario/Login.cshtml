@model Proyecto_Construccion.Models.Usuario
@{
    ViewData["Title"] = "Login";
}

<h1 class="main-title">Login</h1>

<div class="toggle-buttons">
    <button class="toggle-btn" onclick="toggleForm('turista')">Login de Turista</button>
    <button class="toggle-btn" onclick="toggleForm('dueño')">Login de Dueño de Local</button>
</div>
<div class="form-wrapper">
    <div id="turistaForm" class="form-container active">
        <h2>Login de Turista</h2>
        <form id="loginTuristaForm" class="register-form">
            <input type="email" id="UsrCorreo" placeholder="Correo Electrónico" class="form-input" required />
            <input type="password" id="UsrContraseña" placeholder="Contraseña" class="form-input" required />
            <button type="button" class="submit-btn" onclick="loginTurista()">Login</button>
        </form>
    </div>

    <div id="dueñoForm" class="form-container">
        <h2>Login de Dueño de Local</h2>
        <form id="loginDueñoForm" class="register-form">
            <input type="number" id="UsrRuc" placeholder="RUC" class="form-input" required />
            <input type="password" id="UsrContraseñaDueño" placeholder="Contraseña" class="form-input" required />
            <button type="button" class="submit-btn" onclick="loginDueño()">Login</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
            async function loginTurista() {
    const correo = document.getElementById("UsrCorreo").value;
    const contraseña = document.getElementById("UsrContraseña").value;

    const response = await fetch("/Usuario/LoginTurista", { // 🔥 Ahora apunta al Controller en MVC
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ correo, contraseña })
    });

    const data = await response.json();

    if (response.ok) {
        localStorage.setItem("usuario", JSON.stringify(data)); // Guardar usuario en localStorage
        localStorage.setItem("tipoUsuario", data.tipoUsuarioId); // 🔥 Guardar Tipo de Usuario
        alert("Login exitoso");
        window.location.href = "/Home/Index"; // Redirige a la página principal
    } else {
        alert(data.mensaje || "Error en el login");
    }
}

async function loginDueño() {
    const ruc = document.getElementById("UsrRuc").value;
    const contraseña = document.getElementById("UsrContraseñaDueño").value;

    const response = await fetch("/Usuario/LoginDueño", { // 🔥 Ahora apunta al Controller en MVC
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ ruc, contraseña })
    });

    const data = await response.json();

    if (response.ok) {
        localStorage.setItem("usuario", JSON.stringify(data));
        localStorage.setItem("tipoUsuario", data.tipoUsuarioId); // 🔥 Guardar Tipo de Usuario
        alert("Login exitoso");
        window.location.href = "/Home/Index";
    } else {
        alert(data.mensaje || "Error en el login");
    }
}


        function toggleForm(formType) {
            document.getElementById("turistaForm").classList.remove("active");
            document.getElementById("dueñoForm").classList.remove("active");

            if (formType === "turista") {
                document.getElementById("turistaForm").classList.add("active");
            } else {
                document.getElementById("dueñoForm").classList.add("active");
            }
        }
    </script>
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f9;
        color: #333;
        padding: 20px;
        text-align: center;
        display: flex;
        flex-direction: column;
        height: 100vh; /* Altura total de la ventana */
        margin: 0; /* Elimina el margen por defecto */
        justify-content: center; /* Centra verticalmente */
    }

    .main-title {
        text-align: center;
        color: #4A0D50;
        font-size: 2.5em;
        margin-bottom: 30px;
    }

    .toggle-buttons {
        text-align: center;
        margin-bottom: 20px;
    }

    .toggle-btn {
        background-color: #8C0042;
        color: white;
        border: none;
        padding: 10px 20px;
        margin: 0 10px;
        font-size: 1.1em;
        cursor: pointer;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .toggle-btn:hover {
            background-color: #4A0D50;
        }

    .form-wrapper {
        width: 100%;
        max-width: 500px;
        margin: auto;
        position: relative; /* Mantiene el apilamiento relativo */
    }

    .form-container {
        width: 100%;
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: visibility 0.5s ease, opacity 0.5s ease;
        opacity: 0; /* Oculto inicialmente */
        visibility: hidden; /* No visible inicialmente */
        position: absolute; /* Apila los formularios uno encima del otro */
        top: 0; /* Alinea todos los formularios en la parte superior del contenedor */
    }

        .form-container.active {
            opacity: 1; /* Hacer visible */
            visibility: visible; /* Visible */
        }

    .register-form {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
    }

    .form-input {
        width: 80%;
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1em;
        text-align: center;
    }

    .submit-btn {
        width: 80%;
        padding: 10px 20px;
        background-color: #4A0D50;
        color: white;
        border: none;
        cursor: pointer;
        border-radius: 5px;
        font-size: 1.2em;
        transition: background-color 0.3s ease;
    }

        .submit-btn:hover {
            background-color: #8C0042;
        }

    .message {
        text-align: center;
        margin-top: 20px;
        color: #4A0D50;
        font-weight: bold;
    }
</style>


